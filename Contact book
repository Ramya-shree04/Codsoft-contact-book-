import json
import tkinter as tk
from tkinter import messagebox

class ContactManagerApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Contact Manager")
        self.contacts = []
        self.load_contacts()

        self.create_widgets()

    def load_contacts(self):
        try:
            with open('contacts.json', 'r') as file:
                self.contacts = json.load(file)
        except FileNotFoundError:
            pass

    def save_contacts(self):
        with open('contacts.json', 'w') as file:
            json.dump(self.contacts, file, indent=2)

    def create_widgets(self):
        # Labels and Entry widgets
        tk.Label(self.root, text="Name:").grid(row=0, column=0, sticky="e")
        tk.Label(self.root, text="Phone:").grid(row=1, column=0, sticky="e")
        tk.Label(self.root, text="Email:").grid(row=2, column=0, sticky="e")
        tk.Label(self.root, text="Address:").grid(row=3, column=0, sticky="e")

        self.name_entry = tk.Entry(self.root)
        self.phone_entry = tk.Entry(self.root)
        self.email_entry = tk.Entry(self.root)
        self.address_entry = tk.Entry(self.root)

        self.name_entry.grid(row=0, column=1)
        self.phone_entry.grid(row=1, column=1)
        self.email_entry.grid(row=2, column=1)
        self.address_entry.grid(row=3, column=1)

        # Buttons
        tk.Button(self.root, text="Add Contact", command=self.add_contact).grid(row=4, column=0, columnspan=2, pady=10)
        tk.Button(self.root, text="View Contacts", command=self.view_contacts).grid(row=5, column=0, columnspan=2, pady=10)
        tk.Button(self.root, text="Search Contact", command=self.search_contacts).grid(row=6, column=0, columnspan=2, pady=10)

    def add_contact(self):
        name = self.name_entry.get()
        phone = self.phone_entry.get()
        email = self.email_entry.get()
        address = self.address_entry.get()

        contact = {
            'Name': name,
            'Phone': phone,
            'Email': email,
            'Address': address
        }

        self.contacts.append(contact)
        self.save_contacts()
        messagebox.showinfo("Contact Manager", f"Contact '{name}' added successfully.")

    def view_contacts(self):
        if not self.contacts:
            messagebox.showinfo("Contact Manager", "No contacts available.")
        else:
            contacts_info = "\n".join([f"{contact['Name']} - {contact['Phone']}" for contact in self.contacts])
            messagebox.showinfo("Contact Manager", contacts_info)

    def search_contacts(self):
        keyword = simpledialog.askstring("Contact Manager", "Enter the name or phone number to search:")
        results = [contact for contact in self.contacts if keyword.lower() in contact['Name'].lower() or keyword in contact['Phone']]

        if results:
            contacts_info = "\n".join([f"{contact['Name']} - {contact['Phone']}" for contact in results])
            messagebox.showinfo("Contact Manager - Search Results", contacts_info)
        else:
            messagebox.showinfo("Contact Manager - Search Results", "No matching contacts found.")

if __name__ == "__main__":
    root = tk.Tk()
    app = ContactManagerApp(root)
    root.mainloop()
